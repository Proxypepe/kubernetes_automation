---
- name: Ensure crio_version has a 'v' prefix
  set_fact:
    crio_version: "{{ crio_version if crio_version | regex_search('^v') else 'v' + crio_version }}"

- name: Ensure crio_version has a 'v' prefix
  set_fact:
    kubernetes_version: "{{ kubernetes_version if kubernetes_version | regex_search('^v') else 'v' + kubernetes_version }}"

- name: Add Kubernetes repository
  ansible.builtin.yum_repository:
    name: kubernetes
    description: Kubernetes Repository
    baseurl: "https://pkgs.k8s.io/core:/stable:/{{ kubernetes_version }}/rpm/"
    gpgkey: "https://pkgs.k8s.io/core:/stable:/{{ kubernetes_version }}/rpm/repodata/repomd.xml.key"
    enabled: true
    gpgcheck: false

- name: Add cri-o repository
  ansible.builtin.yum_repository:
    name: cri-o
    description: Cri-o Repository
    baseurl: "https://pkgs.k8s.io/addons:/cri-o:/stable:/{{ crio_version }}/rpm/"
    gpgkey: "https://pkgs.k8s.io/addons:/cri-o:/stable:/{{ crio_version }}/rpm/repodata/repomd.xml.key"
    enabled: true
    gpgcheck: false

- name: Install cri-o, kubeadm, kubelet, kubectl
  ansible.builtin.yum:
    name:
      - cri-o
      - kubeadm
      - kubelet
      - kubectl
    state: present

- name: Disable swap
  ansible.builtin.command: swapoff -a

- name: Delete swap from /etc/fstab
  ansible.builtin.command: sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

- name: Ensure swap is disabled in the current session
  ansible.builtin.command: free -m
  register: free_output

- name: Display current swap status
  ansible.builtin.debug:
    msg: "{{ free_output.stdout_lines }}"

- name: Reload systemd manager configuration
  ansible.builtin.command: systemctl daemon-reload

- name: Remount all filesystems
  ansible.builtin.command: mount -a

- name: Disable SeLinux
  ansible.builtin.command: setenforce 0

- name: Disable SeLinux
  ansible.builtin.command: sed -i --follow-symlinks 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/sysconfig/selinux

- name: Ensure net.ipv4.ip_forward is set in sysctl.conf
  ansible.builtin.lineinfile:
    create: true
    path: /etc/modules-load.d/crio.conf
    line: '{{ item }}'
    state: present
  loop:
    - 'overlay'
    - 'br_netfilter'

- name: Turn on kernel libs with modprobe
  ansible.builtin.command: >
    modprobe overlay &&
    modprobe br_netfilter

- name: Ensure net.ipv4.ip_forward is set in sysctl.conf
  ansible.builtin.lineinfile:
    create: true
    path: /etc/sysctl.d/99-kubernetes-cri.conf
    line: '{{ item }}'
    state: present
  loop:
    - 'net.bridge.bridge-nf-call-iptables = 1'
    - 'net.ipv4.ip_forward = 1'

- name: Applying
  ansible.builtin.command: sysctl --system

- name: Create /var/lib/containers directory
  ansible.builtin.file:
    path: /var/lib/containers
    state: directory
    mode: '0755'
    owner: root
    group: root

- name: Enable cri-o and kubelet services
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: true
  loop:
    - crio
    - kubelet

- name: Enable cri-o and kubelet services
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: started
    enabled: true
    daemon_reload: true
  loop:
    - crio

# - name: Disable firewalld
#   ansible.builtin.systemd:
#     name: "{{ item }}"
#     state: stopped
#     enabled: false
#     daemon_reload: true
#   loop:
#     - firewalld

- name: iptables all traffic
  ansible.builtin.command: iptables -P FORWARD ACCEPT
