---

- name: Cri-o | make sure needed folders exist in the system
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  with_items:
    - /etc/crio
    - /etc/containers

- name: Cri-o | install cri-o config
  ansible.builtin.template:
    src: crio.conf.j2
    dest: /etc/crio/crio.conf
    mode: "0644"
  register: config_install

- name: Cri-o | install config.json
  ansible.builtin.template:
    src: config.json.j2
    dest: /etc/crio/config.json
    mode: "0644"
  register: reg_auth_install

- name: Cri-o | create directory registries configs
  ansible.builtin.file:
    path: /etc/containers/registries.conf.d
    state: directory
    owner: root
    mode: "0755"

- name: Cri-o | write registries configs
  ansible.builtin.template:
    src: registry.conf.j2
    dest: "/etc/containers/registries.conf.d/10-{{ item.prefix | default(item.location) | regex_replace(':|/', '_') }}.conf"
    mode: "0644"
  loop: "{{ crio_registries }}"
  notify: Restart crio

- name: Cri-o | ensure crio service is started and enabled
  ansible.builtin.service:
    name: crio
    daemon_reload: true
    enabled: true
    state: started
  register: service_start

- name: Cri-o | trigger service restart only when needed
  ansible.builtin.service:
    name: crio
    state: restarted
  when:
    - config_install.changed or reg_auth_install.changed
    - not service_start.changed

- name: Cri-o | verify that crio is running
  ansible.builtin.command: "/usr/bin/crictl info"
  register: get_crio_info
  until: get_crio_info is succeeded
  changed_when: false
  retries: 2
  delay: 10

- name: Cri-o | Create /var/lib/containers directory
  ansible.builtin.file:
    path: /var/lib/containers
    state: directory
    mode: '0755'
    owner: root
    group: root
